{"ast":null,"code":"var _jsxFileName = \"/home/hirix/projetos/DataVence-CodeTest/src/pages/Form/Form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { GlobalContext } from '../../context/GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [userCep, setUserCep] = useState('');\n  const {\n    viaCep,\n    setViaCep\n  } = useContext(GlobalContext);\n\n  if (!viaCep) {\n    throw new Error(\"Cep não encontrado.\");\n  }\n\n  const history = useHistory();\n\n  const handleChange = event => {\n    const numberCep = event.target.value.replace(/\\D/g, '');\n    setUserCep(numberCep);\n  };\n\n  async function getCEP() {\n    if (userCep === '') {\n      alert('Digite um CEP válido');\n      setUserCep('');\n      return;\n    }\n\n    try {\n      const response = await api.get(`/${userCep}/json`);\n      console.log(response.data);\n      setViaCep(response.data);\n      history.push('/catalog');\n    } catch (error) {\n      console.log('ERROR: ' + error);\n      alert('Digite um CEP válido');\n      setUserCep('');\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userCep,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getCEP,\n      children: \"Buscar CEP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"1j8wbvsH2ThSEg2d7PCgpI+bTes=\", false, function () {\n  return [useHistory];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useContext","useState","useHistory","api","GlobalContext","Form","userCep","setUserCep","viaCep","setViaCep","Error","history","handleChange","event","numberCep","target","value","replace","getCEP","alert","response","get","console","log","data","push","error"],"sources":["/home/hirix/projetos/DataVence-CodeTest/src/pages/Form/Form.tsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { GlobalContext} from '../../context/GlobalState';\n\nconst Form = () => {\n  const [userCep, setUserCep] = useState('');\n  const {viaCep, setViaCep} = useContext(GlobalContext)\n\n  if (!viaCep) {\n    throw new Error(\"Cep não encontrado.\");\n  }\n\n\n  const history = useHistory();\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const numberCep = event.target.value.replace(/\\D/g, '');\n    setUserCep(numberCep);\n  };\n\n  async function getCEP() {\n    if (userCep === '') {\n      alert('Digite um CEP válido');\n      setUserCep('');\n      return;\n    }\n    try {\n      const response = await api.get(`/${userCep}/json`);\n      console.log(response.data);\n      setViaCep(response.data);\n      history.push('/catalog');\n    } catch (error) {\n      console.log('ERROR: ' + error);\n      alert('Digite um CEP válido');\n      setUserCep('');\n      return;\n    }\n  }\n\n  return (\n    <div>\n      <input type=\"text\" value={userCep} onChange={handleChange} />\n      <button onClick={getCEP}>Buscar CEP</button>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,aAAT,QAA6B,2BAA7B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM;IAACO,MAAD;IAASC;EAAT,IAAsBT,UAAU,CAACI,aAAD,CAAtC;;EAEA,IAAI,CAACI,MAAL,EAAa;IACX,MAAM,IAAIE,KAAJ,CAAU,qBAAV,CAAN;EACD;;EAGD,MAAMC,OAAO,GAAGT,UAAU,EAA1B;;EAEA,MAAMU,YAAY,GAAIC,KAAD,IAAgD;IACnE,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,KAA3B,EAAkC,EAAlC,CAAlB;IACAV,UAAU,CAACO,SAAD,CAAV;EACD,CAHD;;EAKA,eAAeI,MAAf,GAAwB;IACtB,IAAIZ,OAAO,KAAK,EAAhB,EAAoB;MAClBa,KAAK,CAAC,sBAAD,CAAL;MACAZ,UAAU,CAAC,EAAD,CAAV;MACA;IACD;;IACD,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAJ,CAAS,IAAGf,OAAQ,OAApB,CAAvB;MACAgB,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;MACAf,SAAS,CAACW,QAAQ,CAACI,IAAV,CAAT;MACAb,OAAO,CAACc,IAAR,CAAa,UAAb;IACD,CALD,CAKE,OAAOC,KAAP,EAAc;MACdJ,OAAO,CAACC,GAAR,CAAY,YAAYG,KAAxB;MACAP,KAAK,CAAC,sBAAD,CAAL;MACAZ,UAAU,CAAC,EAAD,CAAV;MACA;IACD;EACF;;EAED,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAED,OAA1B;MAAmC,QAAQ,EAAEM;IAA7C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEM,MAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAzCD;;GAAMb,I;UASYH,U;;;KATZG,I;AA2CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}