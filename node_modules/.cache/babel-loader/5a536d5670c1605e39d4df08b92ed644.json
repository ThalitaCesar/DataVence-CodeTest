{"ast":null,"code":"var _jsxFileName = \"/home/hirix/projetos/DataVence-CodeTest/src/context/GlobalState.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext({\n  viaCep: [],\n  setViaCep: () => {}\n});\nexport const useStateContext = () => {\n  _s();\n\n  const context = useContext(GlobalContext);\n\n  if (!context) {\n    throw new Error(\"useStateContext must be used within a GlobalStateProvider\");\n  }\n\n  return context;\n};\n\n_s(useStateContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst GlobalState = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [viaCep, setViaCep] = useState([]);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      viaCep,\n      setViaCep\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GlobalState, \"rMG2gzPP13jFHQfMyjDxZx9/zPY=\");\n\n_c = GlobalState;\nexport default GlobalState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalState\");","map":{"version":3,"names":["React","createContext","useContext","useState","GlobalContext","viaCep","setViaCep","useStateContext","context","Error","GlobalState","children"],"sources":["/home/hirix/projetos/DataVence-CodeTest/src/context/GlobalState.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\ntype GlobalStateContextType = {\n  viaCep: any[];\n  setViaCep: React.Dispatch<React.SetStateAction<any[]>>;\n};\n\nexport const GlobalContext = createContext<GlobalStateContextType>({\n  viaCep: [],\n  setViaCep: () => {},\n});\n\nexport const useStateContext = (): GlobalStateContextType => {\n  const context = useContext(GlobalContext);\n  if (!context) {\n    throw new Error(\"useStateContext must be used within a GlobalStateProvider\");\n  }\n  return context;\n};\n\nconst GlobalState: React.FC = ({ children }) => {\n  const [viaCep, setViaCep] = useState<any[]>([]);\n\n  return (\n    <GlobalContext.Provider value={{ viaCep, setViaCep }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default GlobalState;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;;AAOA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,CAAyB;EACjEI,MAAM,EAAE,EADyD;EAEjEC,SAAS,EAAE,MAAM,CAAE;AAF8C,CAAzB,CAAnC;AAKP,OAAO,MAAMC,eAAe,GAAG,MAA8B;EAAA;;EAC3D,MAAMC,OAAO,GAAGN,UAAU,CAACE,aAAD,CAA1B;;EACA,IAAI,CAACI,OAAL,EAAc;IACZ,MAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;EACD;;EACD,OAAOD,OAAP;AACD,CANM;;GAAMD,e;;AAQb,MAAMG,WAAqB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC9C,MAAM,CAACN,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAQ,EAAR,CAApC;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEE,MAAF;MAAUC;IAAV,CAA/B;IAAA,UACGK;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CARD;;IAAMD,W;;KAAAA,W;AAUN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}