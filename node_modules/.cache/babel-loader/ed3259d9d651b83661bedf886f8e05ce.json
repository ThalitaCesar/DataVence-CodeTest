{"ast":null,"code":"var _jsxFileName = \"/home/hirix/projetos/DataVence-CodeTest/src/customHooks/useForm.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useForm = _ref => {\n  _s();\n\n  let {\n    onSubmit,\n    validate\n  } = _ref;\n  const [values, setValues] = React.useState({});\n  const [errors, setErrors] = React.useState({});\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues(values => ({ ...values,\n      [name]: value\n    }));\n\n    if (validate) {\n      setErrors(errors => ({ ...errors,\n        [name]: validate({\n          [name]: value\n        })[name]\n      }));\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formErrors = validate ? validate(values) : {};\n\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n    } else {\n      onSubmit(values);\n    }\n  };\n\n  const handleBlur = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    if (validate) {\n      setErrors(errors => ({ ...errors,\n        [name]: validate({\n          [name]: value\n        })[name]\n      }));\n    }\n  };\n\n  return {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    handleBlur\n  };\n};\n\n_s(useForm, \"oIbDGYi0uOTpTzOl9U/+/w4jPVs=\");\n\nexport const Form = _ref2 => {\n  _s2();\n\n  let {\n    onSubmit,\n    validate,\n    children\n  } = _ref2;\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    handleBlur\n  } = useForm({\n    onSubmit,\n    validate\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [React.Children.map(children, child => {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.name) {\n        var _values$name;\n\n        const name = child.props.name;\n        const value = (_values$name = values[name]) !== null && _values$name !== void 0 ? _values$name : '';\n        const error = errors[name];\n        return /*#__PURE__*/React.cloneElement(child, {\n          value,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          error\n        });\n      }\n\n      return child;\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), Object.keys(errors).map(name => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors[name]\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Form, \"UPCoxdaq6CZHjV9Dp5qg5xqDaVg=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useForm","onSubmit","validate","values","setValues","useState","errors","setErrors","handleChange","event","name","value","target","handleSubmit","preventDefault","formErrors","Object","keys","length","handleBlur","Form","children","Children","map","child","isValidElement","props","error","cloneElement","onChange","onBlur"],"sources":["/home/hirix/projetos/DataVence-CodeTest/src/customHooks/useForm.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Props {\n  onSubmit: (data: Record<string, string>) => void;\n  validate?: (values: Record<string, string>) => Record<string, string>;\n}\n\nexport const useForm = ({ onSubmit, validate }: Props) => {\n  const [values, setValues] = React.useState<Record<string, string>>({});\n  const [errors, setErrors] = React.useState<Record<string, string>>({});\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setValues((values) => ({ ...values, [name]: value }));\n\n    if (validate) {\n      setErrors((errors) => ({ ...errors, [name]: validate({ [name]: value })[name] }));\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const formErrors = validate ? validate(values) : {};\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n    } else {\n      onSubmit(values);\n    }\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    if (validate) {\n      setErrors((errors) => ({ ...errors, [name]: validate({ [name]: value })[name] }));\n    }\n  };\n\n  return {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    handleBlur,\n  };\n};\n\ninterface FormProps {\n  onSubmit: (data: Record<string, string>) => void;\n  validate?: (values: Record<string, string>) => Record<string, string>;\n}\n\nexport const Form: React.FC<FormProps> = ({ onSubmit, validate, children }) => {\n  const { values, errors, handleChange, handleSubmit, handleBlur } = useForm({ onSubmit, validate });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child) && child.props.name) {\n          const name = child.props.name as string;\n          const value = values[name] ?? '';\n          const error = errors[name];\n\n          return React.cloneElement(child, {\n            value,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            error,\n          });\n        }\n\n        return child;\n      })}\n      <button type=\"submit\">Submit</button>\n      {Object.keys(errors).map((name) => (\n        <p key={name}>{errors[name]}</p>\n      ))}\n    </form>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}