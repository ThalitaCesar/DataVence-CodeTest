{"ast":null,"code":"import * as yup from 'yup';\nexport const validationSchema = yup.object().shape({\n  name: yup.string().required('O nome é obrigatório'),\n  cpf: yup.string().required('O cpf é obrigatório'),\n  email: yup.string().email('Email inválido').required('O email é obrigatório'),\n  neighborhood: yup.string().required('O bairro é obrigatório'),\n  cep: yup.string().required('O cep é obrigatório'),\n  city: yup.string().required('A cidade é obrigatória'),\n  street: yup.string().required('A rua é obrigatória'),\n  state: yup.string().required('O estado é obrigatório'),\n  number: yup.string().required('O número é obrigatório'),\n  plan: yup.string().required('O plano é obrigatório'),\n  themes: yup.array().of(yup.string()).required('Os temas de leitura são obrigatórios'),\n  additionalInfo: yup.mixed().nullable()\n});","map":{"version":3,"names":["yup","validationSchema","object","shape","name","string","required","cpf","email","neighborhood","cep","city","street","state","number","plan","themes","array","of","additionalInfo","mixed","nullable"],"sources":["/home/hirix/projetos/DataVence-CodeTest/src/pages/Form/valitation.ts"],"sourcesContent":["import * as yup from 'yup';\n\nexport const validationSchema = yup.object().shape({\n    name: yup.string().required('O nome é obrigatório'),\n    cpf: yup.string().required('O cpf é obrigatório'),\n    email: yup\n      .string()\n      .email('Email inválido')\n      .required('O email é obrigatório'),\n    neighborhood: yup.string().required('O bairro é obrigatório'),\n    cep: yup.string().required('O cep é obrigatório'),\n    city: yup.string().required('A cidade é obrigatória'),\n    street: yup.string().required('A rua é obrigatória'),\n    state: yup.string().required('O estado é obrigatório'),\n    number: yup.string().required('O número é obrigatório'),\n    plan: yup.string().required('O plano é obrigatório'),\n    themes: yup.array().of(yup.string()).required('Os temas de leitura são obrigatórios'),\n    additionalInfo: yup.mixed().nullable(),\n  });"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;EAC/CC,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CADyC;EAE/CC,GAAG,EAAEP,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAF0C;EAG/CE,KAAK,EAAER,GAAG,CACPK,MADI,GAEJG,KAFI,CAEE,gBAFF,EAGJF,QAHI,CAGK,uBAHL,CAHwC;EAO/CG,YAAY,EAAET,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAPiC;EAQ/CI,GAAG,EAAEV,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAR0C;EAS/CK,IAAI,EAAEX,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CATyC;EAU/CM,MAAM,EAAEZ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAVuC;EAW/CO,KAAK,EAAEb,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAXwC;EAY/CQ,MAAM,EAAEd,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAZuC;EAa/CS,IAAI,EAAEf,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CAbyC;EAc/CU,MAAM,EAAEhB,GAAG,CAACiB,KAAJ,GAAYC,EAAZ,CAAelB,GAAG,CAACK,MAAJ,EAAf,EAA6BC,QAA7B,CAAsC,sCAAtC,CAduC;EAe/Ca,cAAc,EAAEnB,GAAG,CAACoB,KAAJ,GAAYC,QAAZ;AAf+B,CAAnB,CAAzB"},"metadata":{},"sourceType":"module"}