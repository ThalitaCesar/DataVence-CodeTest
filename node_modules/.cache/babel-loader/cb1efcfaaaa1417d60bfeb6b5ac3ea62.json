{"ast":null,"code":"var _jsxFileName = \"/home/hirix/projetos/DataVence-CodeTest/src/customHooks/useForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useForm = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: '',\n    cpf: '',\n    email: '',\n    neighborhood: '',\n    cep: '',\n    city: '',\n    street: '',\n    complement: '',\n    state: '',\n    number: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({\n    name: false,\n    cpf: false,\n    email: false,\n    neighborhood: false,\n    cep: false,\n    city: false,\n    street: false,\n    complement: false,\n    state: false,\n    number: false\n  });\n  const [status, setStatus] = useState('idle');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(prevValues => ({ ...prevValues,\n      [name]: value\n    }));\n  };\n\n  const handleBlur = e => {\n    const {\n      name\n    } = e.target;\n    setTouched(prevTouched => ({ ...prevTouched,\n      [name]: true\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setTouched(prevTouched => {\n      const touchedFields = {\n        name: true,\n        cpf: true,\n        email: true,\n        neighborhood: true,\n        cep: true,\n        city: true,\n        street: true,\n        complement: true,\n        state: true,\n        number: true\n      };\n      return touchedFields;\n    });\n    const formErrors = {};\n\n    if (values.name.trim() === '') {\n      formErrors.name = 'O nome é obrigatório';\n    }\n\n    if (values.cpf.trim() === '') {\n      formErrors.cpf = 'O cpf é obrigatório';\n    }\n\n    if (values.email.trim() === '') {\n      formErrors.email = 'O email é obrigatório';\n    }\n\n    if (values.neighborhood.trim() === '') {\n      formErrors.neighborhood = 'O bairro é obrigatório';\n    }\n\n    if (values.cep.trim() === '') {\n      formErrors.cep = 'O cep é obrigatório';\n    }\n\n    if (values.city.trim() === '') {\n      formErrors.city = 'A cidade é obrigatória';\n    }\n\n    if (values.street.trim() === '') {\n      formErrors.street = 'A rua é obrigatória';\n    }\n\n    if (values.state.trim() === '') {\n      formErrors.state = 'O estado é obrigatório';\n    }\n\n    if (values.number.trim() === '') {\n      formErrors.number = 'O número é obrigatório';\n    }\n\n    setErrors(formErrors);\n\n    if (Object.keys(formErrors).length === 0) {\n      setStatus('submitting');\n      setStatus('submitted');\n    } else {\n      setStatus('error');\n    }\n  };\n\n  const renderErrorMessage = field => {\n    if (touched[field] && errors[field]) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: errors[field]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 14\n      }, this);\n    }\n\n    return null;\n  };\n\n  return {\n    values,\n    errors,\n    touched,\n    status,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  };\n};\n\n_s(useForm, \"K6WlRAF2kpzYtGk/uVj06JSC0SE=\");\n\nexport default useForm;","map":{"version":3,"names":["useState","useForm","values","setValues","name","cpf","email","neighborhood","cep","city","street","complement","state","number","errors","setErrors","touched","setTouched","status","setStatus","handleChange","e","value","target","prevValues","handleBlur","prevTouched","handleSubmit","preventDefault","touchedFields","formErrors","trim","Object","keys","length","renderErrorMessage","field"],"sources":["/home/hirix/projetos/DataVence-CodeTest/src/customHooks/useForm.tsx"],"sourcesContent":["import { useState } from 'react';\n\ntype FormValues = {\n  name: string;\n  cpf: string;\n  email: string;\n  neighborhood: string;\n  cep: string;\n  city: string;\n  street: string;\n  complement: string;\n  state: string;\n  number: string;\n};\n\ntype FormErrors = {\n  [key in keyof FormValues]?: string;\n};\n\ntype FormTouched = {\n  [key in keyof FormValues]: boolean;\n};\n\ntype FormStatus = 'idle' | 'submitting' | 'submitted' | 'error';\n\ntype UseFormResult = {\n  values: FormValues;\n  errors: FormErrors;\n  touched: FormTouched;\n  status: FormStatus;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  handleBlur: (e: React.FocusEvent<HTMLInputElement>) => void;\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n};\n\nconst useForm = (): UseFormResult => {\n  const [values, setValues] = useState<FormValues>({\n    name: '',\n    cpf: '',\n    email: '',\n    neighborhood: '',\n    cep: '',\n    city: '',\n    street: '',\n    complement: '',\n    state: '',\n    number: '',\n  });\n\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [touched, setTouched] = useState<FormTouched>({\n    name: false,\n    cpf: false,\n    email: false,\n    neighborhood: false,\n    cep: false,\n    city: false,\n    street: false,\n    complement: false,\n    state: false,\n    number: false,\n  });\n  const [status, setStatus] = useState<FormStatus>('idle');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues((prevValues) => ({\n      ...prevValues,\n      [name]: value,\n    }));\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n    setTouched((prevTouched) => ({\n      ...prevTouched,\n      [name]: true,\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setTouched((prevTouched) => {\n      const touchedFields: FormTouched = {\n        name: true,\n        cpf: true,\n        email: true,\n        neighborhood: true,\n        cep: true,\n        city: true,\n        street: true,\n        complement: true,\n        state: true,\n        number: true,\n      };\n      return touchedFields;\n    });\n\n    const formErrors: FormErrors = {};\n    if (values.name.trim() === '') {\n      formErrors.name = 'O nome é obrigatório';\n    }\n    if (values.cpf.trim() === '') {\n        formErrors.cpf = 'O cpf é obrigatório';\n      }\n      if (values.email.trim() === '') {\n        formErrors.email = 'O email é obrigatório';\n      }\n      if (values.neighborhood.trim() === '') {\n        formErrors.neighborhood = 'O bairro é obrigatório';\n      }\n      if (values.cep.trim() === '') {\n        formErrors.cep = 'O cep é obrigatório';\n      }\n      if (values.city.trim() === '') {\n        formErrors.city = 'A cidade é obrigatória';\n      }\n      if (values.street.trim() === '') {\n        formErrors.street = 'A rua é obrigatória';\n      }\n      if (values.state.trim() === '') {\n        formErrors.state = 'O estado é obrigatório';\n      }\n      if (values.number.trim() === '') {\n        formErrors.number = 'O número é obrigatório';\n      }\n\n    setErrors(formErrors);\n\n    if (Object.keys(formErrors).length === 0) {\n      setStatus('submitting');\n      setStatus('submitted');\n    } else {\n      setStatus('error');\n    }\n  };\n\n  const renderErrorMessage = (field: keyof FormErrors) => {\n    if (touched[field] && errors[field]) {\n      return <div className=\"error\">{errors[field]}</div>;\n    }\n    return null;\n  };\n\n  return {\n    values,\n    errors,\n    touched,\n    status,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  };\n};\n\nexport default useForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}